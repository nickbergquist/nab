body {
  margin: 0; }

html {
  box-sizing: border-box; }

*, *::before, *::after {
  box-sizing: inherit; }

h1,
h2,
h3,
h4,
p,
blockquote,
figure,
ol,
ul {
  margin: 0;
  padding: 0; }

main,
li {
  display: block; }

h1,
h2,
h3,
h4 {
  font-size: inherit; }

strong {
  font-weight: bold; }

a,
button,
[type='submit'] {
  color: inherit;
  -webkit-transition: .3s;
  transition: .3s; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }
  a:focus {
    text-decoration: underline; }

button,
[type='submit'] {
  background: none;
  border: 0;
  cursor: pointer;
  font: inherit;
  letter-spacing: inherit;
  overflow: visible; }

img {
  border: 0;
  height: auto;
  max-width: 100%; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

.hide {
  display: none;
  visibility: hidden; }

.off-screen {
  height: 1px;
  left: -999em;
  overflow: hidden;
  position: absolute;
  width: 1px; }

.off-screen-replacement-selector {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.vendor-prefix-test {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.just-a-test {
  font-size: 16px; }
  @media (min-width: 480px) {
    .just-a-test {
      font-size: 18px; } }
  @media (min-width: 768px) {
    .just-a-test {
      font-size: 20px; } }

@font-face {
  font-family: "OpenSans-Regular";
  font-style: normal;
  font-weight: normal;
  src: url("../type/OpenSans-Regular.eot?#iefix") format("embedded-opentype"), url("../type/OpenSans-Regular.woff") format("woff"), url("../type/OpenSans-Regular.ttf") format("truetype"), url("../type/OpenSans-Regular.svg#OpenSans-Regular") format("svg"); }

@font-face {
  font-family: "OpenSans-Bold";
  font-style: normal;
  font-weight: normal;
  src: url("../type/OpenSans-Bold.eot?#iefix") format("embedded-opentype"), url("../type/OpenSans-Bold.woff") format("woff"), url("../type/OpenSans-Bold.ttf") format("truetype"), url("../type/OpenSans-Bold.svg#OpenSans-Bold") format("svg"); }

@font-face {
  font-family: "OldStandard-Regular";
  font-style: normal;
  font-weight: normal;
  src: url("../type/oldstandard-regular.eot?#iefix") format("embedded-opentype"), url("../type/oldstandard-regular.woff") format("woff"), url("../type/oldstandard-regular.ttf") format("truetype"), url("../type/oldstandard-regular.svg#OldStandard-Regular") format("svg"); }

html {
  font-size: 62.5%; }

body {
  font: 1.4rem / 1.5 OpenSans-Regular, Arial, Helvetica, sans-serif; }

h1 {
  font-size: 3.6rem;
  margin-bottom: 0.41667rem; }

h2 {
  font-size: 2.4rem;
  margin-bottom: 0.625rem; }

h3 {
  font-size: 1.8rem;
  margin-bottom: 0.83333rem; }

p {
  font-size: 1.4rem;
  margin-bottom: 1.07143rem; }

body {
  min-width: 320px; }

main {
  overflow: hidden;
  padding: 2.5rem 1.5625% 1.25rem; }
  @media (min-width: 1280px) {
    main {
      margin-left: auto;
      margin-right: auto;
      width: 1280px; } }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #fecc09;
  text-shadow: 2px 2px 1px #888; }

.content-restrict {
  padding: 0 1.5625%; }
  @media (min-width: 1280px) {
    .content-restrict {
      margin-left: auto;
      margin-right: auto;
      width: 1280px; } }

.skip:active {
  position: static; }

.skip:focus {
  position: static; }

header {
  background: url("../images/background-paws.jpg") no-repeat fixed center center/cover;
  overflow: hidden; }
  .page-home header {
    min-height: 100%; }

.logo-site {
  margin-bottom: 0;
  z-index: 1; }
  .page-home .logo-site {
    left: 50%;
    margin-left: -160px;
    padding: 25px;
    position: absolute;
    top: 40%;
    width: 320px; }

footer {
  background-color: #333;
  color: #fff; }

nav {
  width: 100%; }
  nav a {
    color: #fff;
    display: block;
    padding: 1.2rem 0; }
  nav li {
    display: table-cell;
    vertical-align: middle; }
  nav ul {
    display: table;
    table-layout: fixed;
    text-align: center;
    width: 100%; }
  nav .anchor-home {
    background-color: #c03; }
  nav .anchor-about {
    background-color: #fecc09; }
  nav .anchor-work {
    background-color: #4b5b6e; }
  nav .anchor-contact {
    background-color: #0077db; }
  .page-home nav {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0; }

button, [type='submit'] {
  border-style: solid;
  border-width: 1px;
  display: inline-block;
  font-size: 1.3rem;
  font-weight: bold;
  padding: 0.5rem 1rem; }

button {
  background-color: transparent;
  border-color: #c03;
  color: #c03; }
  button:hover {
    background-color: #c03;
    color: #fecc09; }
  button.secondary {
    background-color: transparent;
    border-color: rgba(0, 119, 219, 0.25);
    color: rgba(0, 119, 219, 0.25); }
    button.secondary:hover {
      background-color: rgba(0, 119, 219, 0.25);
      color: #0077db; }

[type='submit'] {
  background-color: transparent;
  border-color: #c03;
  color: #c03; }
  [type='submit']:hover {
    background-color: #c03;
    color: #0077db; }

html,
body {
  height: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
