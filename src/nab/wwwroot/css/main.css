@charset "UTF-8";
body {
  margin: 0; }

html {
  box-sizing: border-box; }

*, *::before, *::after {
  box-sizing: inherit; }

h1,
h2,
h3,
h4,
p,
blockquote,
figure,
ol,
ul {
  margin: 0;
  padding: 0; }

main,
li {
  display: block; }

h1,
h2,
h3,
h4 {
  font-size: inherit; }

strong {
  font-weight: bold; }

a,
button,
[type='submit'] {
  color: inherit;
  -webkit-transition: .3s;
  transition: .3s; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: underline; }
  a:focus {
    text-decoration: underline; }

button,
[type='submit'] {
  background: none;
  border: 0;
  cursor: pointer;
  padding: 0; }

img {
  border: 0;
  height: auto;
  max-width: 100%; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

.hide {
  display: none;
  visibility: hidden; }

.off-screen {
  height: 1px;
  left: -999em;
  overflow: hidden;
  position: absolute;
  width: 1px; }

@-webkit-keyframes shift-horizontal {
  0% {
    -webkit-transform: translate(-100%, 0);
            transform: translate(-100%, 0); }
  100% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); } }

@keyframes shift-horizontal {
  0% {
    -webkit-transform: translate(-100%, 0);
            transform: translate(-100%, 0); }
  100% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); } }

@-webkit-keyframes shift-vertical {
  0% {
    -webkit-transform: translate(0, -100%);
            transform: translate(0, -100%); }
  100% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); } }

@keyframes shift-vertical {
  0% {
    -webkit-transform: translate(0, -100%);
            transform: translate(0, -100%); }
  100% {
    -webkit-transform: translate(0, 0);
            transform: translate(0, 0); } }

@font-face {
  font-family: "OpenSans-Regular";
  font-style: normal;
  font-weight: normal;
  src: url("../type/OpenSans-Regular.eot?#iefix") format("embedded-opentype"), url("../type/OpenSans-Regular.woff") format("woff"), url("../type/OpenSans-Regular.ttf") format("truetype"), url("../type/OpenSans-Regular.svg#OpenSans-Regular") format("svg"); }

@font-face {
  font-family: "ArchivoBlack-Regular";
  font-style: normal;
  font-weight: normal;
  src: url("../type/archivoblack-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../type/archivoblack-regular-webfont.woff") format("woff"), url("../type/archivoblack-regular-webfont.ttf") format("truetype"), url("../type/archivoblack-regular-webfont.svg#ArchivoBlack-Regular") format("svg"); }

@font-face {
  font-family: "FrancoisOne-Regular";
  font-style: normal;
  font-weight: normal;
  src: url("../type/francoisone-regular-webfont.eot?#iefix") format("embedded-opentype"), url("../type/francoisone-regular-webfont.woff") format("woff"), url("../type/francoisone-regular-webfont.ttf") format("truetype"), url("../type/francoisone-regular-webfont.svg#FrancoisOne-Regular") format("svg"); }

@font-face {
  font-family: "menu-fontello";
  font-style: normal;
  font-weight: normal;
  src: url("../type/menu-fontello.eot?#iefix") format("embedded-opentype"), url("../type/menu-fontello.woff") format("woff"), url("../type/menu-fontello.ttf") format("truetype"), url("../type/menu-fontello.svg#menu-fontello") format("svg"); }

body {
  font: 1.4rem / 1.5 OpenSans-Regular, Arial, Helvetica, sans-serif; }

html {
  font-size: 62.5%; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: ArchivoBlack-Regular, sans-serif; }

h1 {
  font-size: 3.6rem;
  margin-bottom: 0.83333rem; }

h2 {
  font-size: 2.4rem;
  margin-bottom: 0.625rem; }

h3 {
  font-size: 1.8rem;
  margin-bottom: 0.83333rem; }

h4 {
  font-size: 1.4rem;
  margin-bottom: 1.07143rem; }

p {
  font-size: 1.4rem;
  margin-bottom: 1.07143rem; }

body {
  background-color: #fff;
  min-width: 320px; }

html {
  background-color: #333; }
  html.page-home {
    background-color: #fff; }

main {
  overflow: hidden;
  padding: 2.5rem 1.5873% 4rem; }
  @media (min-width: 1280px) {
    main {
      margin-left: auto;
      margin-right: auto;
      width: 1260px; } }

h1,
h2,
h3,
h4,
h5,
h6 {
  color: #bfbfbf;
  text-shadow: 1px 1px 1px #333; }

h1 {
  color: #999999;
  text-align: center; }

.content-restrict {
  padding: 0 1.5873%; }
  @media (min-width: 1280px) {
    .content-restrict {
      margin-left: auto;
      margin-right: auto;
      width: 1260px; } }

.skip:active {
  position: static; }

.skip:focus {
  position: static; }

header {
  background: url("../images/background-paws.jpg") no-repeat fixed center center/cover;
  box-shadow: 0 -5px 4px -5px rgba(0, 0, 0, 0.75) inset;
  min-height: 8rem; }
  header::before {
    box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.75);
    content: '';
    position: fixed;
    width: 100%;
    z-index: 1; }
  header .nav-button-show {
    position: absolute;
    right: 1.75rem;
    top: 1.5rem; }

.logo-site {
  margin-bottom: 0; }

footer {
  background-color: #c03;
  box-shadow: 0 1px 8px 5px rgba(0, 0, 0, 0.75);
  color: #fff;
  overflow: hidden; }
  footer .content-restrict {
    padding-top: 1.25rem; }

nav {
  box-shadow: 0 3px 8px 1px rgba(0, 0, 0, 0.75);
  clear: both;
  text-align: center; }
  @media (max-width: 479px) {
    nav {
      height: 1px;
      left: -999em;
      position: absolute;
      width: auto; }
      nav.active {
        -webkit-animation: shift-horizontal .3s ease-in-out;
                animation: shift-horizontal .3s ease-in-out;
        height: auto;
        left: auto;
        top: 8rem;
        width: 100%; } }
  @media (min-width: 480px) {
    nav li {
      display: table-cell;
      vertical-align: middle; }
    nav ul {
      display: table;
      table-layout: fixed;
      width: 100%; } }
  nav a {
    font-size: 1.8rem;
    color: #fff;
    display: block;
    font-family: FrancoisOne-Regular, sans-serif;
    font-variant: small-caps;
    padding: 1.25rem 1.5873% 1rem;
    text-transform: capitalize; }
  nav .anchor-home a {
    background-color: #c03; }
    nav .anchor-home a:hover {
      background-color: #b3002d; }
  nav .anchor-about a {
    background-color: #fecc09; }
    nav .anchor-about a:hover {
      background-color: #edbc01; }
  nav .anchor-work a {
    background-color: #4b5b6e; }
    nav .anchor-work a:hover {
      background-color: #414e5f; }
  nav .anchor-contact a {
    background-color: #0077db; }
    nav .anchor-contact a:hover {
      background-color: #0069c2; }

[type='submit'], .button {
  border-style: solid;
  border-width: 1px;
  display: inline-block;
  font-size: 1.3rem;
  font-weight: bold;
  padding: 0.5rem 1rem; }

[type='submit'] {
  background-color: transparent;
  border-color: #c03;
  color: #c03; }
  [type='submit']:hover {
    background-color: #c03;
    color: #0077db; }

.button {
  background-color: transparent;
  border-color: #c03;
  color: #c03; }
  .button:hover {
    background-color: #c03;
    color: #fecc09; }
  .button.secondary {
    background-color: transparent;
    border-color: rgba(0, 119, 219, 0.25);
    color: rgba(0, 119, 219, 0.25); }
    .button.secondary:hover {
      background-color: rgba(0, 119, 219, 0.25);
      color: #0077db; }

.nav-button-show {
  position: relative; }
  .nav-button-show::before {
    bottom: 0;
    content: '';
    left: 0;
    position: absolute;
    right: 0;
    top: 0; }

.nav-button-show {
  background-color: rgba(255, 255, 255, 0.25);
  color: #e6e6e6;
  font-family: "menu-fontello";
  font-size: 3.5rem;
  height: 5rem;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.75);
  width: 5rem; }
  .nav-button-show::before {
    content: "";
    padding: 0.7rem; }
  .nav-button-show:hover {
    color: #999; }
  .nav-button-show.active {
    color: #999; }
    .nav-button-show.active::before {
      content: ""; }
  .nav-button-show span {
    display: inline-block;
    overflow: hidden;
    text-indent: -999em; }

.page-home body {
  height: 100%; }

.page-home header {
  min-height: 100%;
  overflow: hidden; }

html.page-home {
  height: 100%; }

@media (min-width: 480px) {
  .page-home nav {
    bottom: 0;
    position: absolute; } }

.page-home nav {
  margin-top: 8rem; }

@media (max-width: 479px) {
  .page-home nav {
    box-shadow: 0 5px 10px 1px rgba(0, 0, 0, 0.75); }
    .page-home nav.active {
      top: auto; } }

.page-home .logo-site {
  background-color: rgba(102, 102, 102, 0.25);
  box-shadow: 0 0 125px rgba(255, 255, 255, 0.75);
  font-size: 2.1rem;
  left: 50%;
  margin-left: -160px;
  padding: 25px;
  position: absolute;
  top: 40%;
  width: 320px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
