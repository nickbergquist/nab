
///////////////
//  inputs   //
///////////////

@mixin button-theme($colour, $colour-text-hover: palette-colour($palette-main, 'secondary')) {
  background-color: transparent;
  border-color: $colour;
  color: $colour;

  &:hover {
    background-color: $colour;
    color: $colour-text-hover;
  }
}


//////////////////////
//  media queries   //
//////////////////////

@mixin mq-small {
  //@media (min-width: #{map-get($breakpoints, 'small')}) and (max-width: #{map-get($breakpoints, 'medium') - 1px}) {
  @media (min-width: #{map-get($breakpoints, 'small')}) {
    @content;
  }
}

@mixin mq-medium {
  @media (min-width: #{map-get($breakpoints, 'medium')}) {
    @content;
  }
}

@mixin mq-large {
  @media (min-width: #{map-get($breakpoints, 'large')}) {
    @content;
  }
}

@mixin mq-full {
  @media (min-width: #{map-get($breakpoints, 'full')}) {
    @content;
  }
}


//////////////////////
//  typographical   //
//////////////////////

@mixin font-face($family, $src, $style: normal, $weight: normal) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    src: url('#{$src}.eot?#iefix') format('embedded-opentype'), // IE8 and below
    url('#{$src}.woff') format('woff'), // standard
    url('#{$src}.ttf') format('truetype'), // Safari, Android, iOS
    url('#{$src}.svg##{$family}') format('svg'); // legacy iOS
  }
}

@mixin font-process($font-size, $bottom-margin-adjust: null) {
  $font-size-rem: strip-units($font-size) / basefont-to-pixel($base-font-size);
  font-size: #{$font-size-rem}#{'rem'};

  @if $bottom-margin-adjust == 0 {
    $margin: null;
  } @else if $bottom-margin-adjust == 2 {
    $margin: ($base-line-height / $font-size-rem) * 2;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == 1 {
    $margin: ($base-line-height / $font-size-rem);
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == 1.5 {
    $margin: ($base-line-height / $font-size-rem) * 1.5;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == .5 {
    $margin: ($base-line-height / $font-size-rem) / 2;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == .25 {
    $margin: ($base-line-height / $font-size-rem) / 4;
    margin-bottom: #{$margin}#{'rem'};
  } @else if $bottom-margin-adjust == null {
    $margin: $base-line-height / $font-size-rem;
    margin-bottom: #{$margin}#{'rem'};
  }
}
